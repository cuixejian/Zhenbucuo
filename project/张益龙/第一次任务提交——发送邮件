package com.webtest.utils;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.util.Properties;

import javax.mail.Authenticator;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart; class MailUtil {
	public static void mail(String data) throws IOException, MessagingException {
		Properties props = new Properties();

		props.put("mail.transport.protocol", "smtp");
		props.put("mail.smtp.host", "smtp.126.com");
		props.put("mail.smtp.auth", true);
		String sender = getPropertyValue("sender");

		// 授权码
		String auth_code = getPropertyValue("auth_code");
		String tomail = getPropertyValue("tomail");
		// 1、构造Session对象（邮件会话对象），设置服务器，授权码，需要Properties对象
		Session session = Session.getInstance(props, new Authenticator() {

			@Override
			protected PasswordAuthentication getPasswordAuthentication() {
				// TODO Auto-generated method stub
				return new PasswordAuthentication(sender, auth_code);
			}

		});

		// 2、创建邮件，创建Message对象，子类 MimeMessage
		// 设置发件人、收件人、主题、正文
		Message message = new MimeMessage(session);
		message.setFrom(new InternetAddress(sender));
		String[] strings = tomail.split(",");

		for (int i = 0; i < strings.length; i++) {
			tomail = (String) strings[i];
			message.addRecipient(Message.RecipientType.TO, new InternetAddress(tomail));
		}

		message.setSubject("测试报告");
//		message.setText(data);
//		Message messafeMessage=get
		Multipart mainPart=new MimeMultipart();
		BodyPart html=new MimeBodyPart();
		html.setContent(data,"text/html;charset=utf-8");
		mainPart.addBodyPart(html);
		message.setContent(mainPart);
		// 3、发送邮件
		Transport.send(message);
	}

	public static final String filePath = "conf/config.properties";

	public static String getPropertyValue(String key) throws IOException {
		Properties prop = new Properties();
		FileInputStream fis = new FileInputStream(filePath);
		prop.load(fis);
		fis.close();
		return prop.getProperty(key);

	}
}
